from KatilMusic import app 
import asyncio
import random
from pyrogram import Client, filters
from pyrogram.enums import ChatType, ChatMemberStatus
from pyrogram.errors import UserNotParticipant
from pyrogram.types import ChatPermissions

spam_chats = []

EMOJI = [ "??????????",
          "???М╕???Нм??",
          "???М╖?М╣?М║??",
          "?М╕?М┐?То?М▒?М╡",
          "?дя????????Цд",
          "??????????",
          "?М╕???М║?М╣??",
          "???жк???Н▓??",
          "?????????М╢я╕?,
          "???ед?????Н╖",
          "?Нм?Нн?????Нб",
          "?Ни???Н║?ХЁ??,
          "?ек?ез?Нж?Не??",
          "???ХЁ?╣Ё?╖ЁЯе?,
          "?ХЁЯзГЁ?йЁ?жЁ??,
          "???М╛?То???М┐",
          "?Мия╕ПЁ?ея??Ия??Мйя╕ПЁ?зя?",
          "?М╖?П╡я╕ПЁ?╕Ё?║Ё??,
          "?То?М╝?М╗????",
          "???ж╕?ж╣???С╕",
          "???????М╜?еж",
          "?Р╖?Р╣?Рн?Ри?Р╗?Нт?я╕?,
          "???????????Нт?",
          "?М╝?М│?М▓?М┤?М╡",
          "?ей????????",
          "?Н┤?Н╜я╕ПЁ?кЁ?╢ЁЯе?,
          "???П░?Пй?йя??Пй",
          "??????????",
          "?к┤?М╡?М┤?М│?М▓",
          "??????????",
          "??????я╕ПЁЯждЁЯж?,
          "?жд?жй??????",
          "?Рм?жн?????Р│",
          "???????Рб??",
          "?жй???????жк",
          "?Рж???Х╖я╕ПЁ?╕я???",
          "?ек?Н░?ез?Ни?Ни",
          " ?ем??????",
        ]

TAGMES = [ " **??╔к ?с┤Пс?с┤??с┤Пс?...с░Фс?**",
           " **???с┤П╩А╔вс┤Зс? с┤Нс?..с░Фс?",
           " **??╔к с┤Ес?╔┤'с┤??с┤Пс?с┤??с┤Пс?...с░Фс?**",
           " **??с┤Нс?с┤Лс? ╔кс┤??с┤Пс??s с┤Ш╔к╩Пс?, с┤Нс?с┤Лс? ╔кс┤??с┤Пс??s...с░Фс?**",
           " **??с┤Кс?╔к╔┤ с┤Н╩?╔в?с┤Пс?с┤?с┤А?sс┤?..с░Фс?**",
           " **??╔к с┤Лс?с┤Шс? ?с┤Пс?? ╔┤с┤Ас┤Нс? ╔к╔┤ с┤Н╩??с┤Зс??с┤?..с░Фс?**",
           " **??с┤б╩Ьс??с┤?с┤А?с┤?с┤А?? ?с┤Пс?? ??╔кс┤З╔┤с?s...с░Фс?**",
           " **??╔к╔┤ с┤б╩Ьс?sс┤?с┤Нс?с┤Нс??? с┤А?с┤??с┤Пс? ?с┤Пsс┤?с┤Н╩??с┤Пс?с┤?..с░Фс?**",
           " **??с┤б╩Ьс?с┤Ыs ?с┤Пс?? с┤Ш╩Ас┤П╥Ус?ss╔кс┤П╔?..с░Фс?**",
           " **??с┤б╩Ьс??с┤?с┤Е╔кс? ?с┤Пс? ?╔кс┤ас?...с░Фс?**",
           " **??╔вс┤Пс?с┤?с┤Нс??╔┤╔к╔┤╔в, ?с┤А??...с░Фс?**",
           " **??╔вс┤Пс?с┤?╔┤╔к╔в?с┤? ╔кс┤?s с┤ас??? ?с┤Ас┤Ыс?...с░Фс?**",
           " **??╔к ?с┤Зс?? с┤ас??? sс┤Ас┤?с┤Ыс?с┤Ес??...с░Фс?**",
           " **??с┤Ыс??с┤?с┤Ыс? с┤Нс? с┤Ыс?с┤?..с░Фс?**",
           " **??с┤б╩Ьс?с┤?s ?с┤П╩А с┤Е╔к╔┤╔┤с?? с┤Ыс?с┤Ес??...с░Фс?**",
           " **??с┤б╩Ьс?с┤?s ╔вс┤П╔к╔┤╔?с┤П╔?..с░Фс?**",
           " **??с┤б╩Ь╩?с┤Ес?╔┤'с┤??с┤Пс? с┤Нс?ssс┤А╔вс┤?..с░Фс?**",
           " **??╔к с┤Ас┤?╔к╔┤╔┤с┤Пс?с┤З╔┤с?...с░Фс?**",
           " **??╔кс┤?с┤бс?s ?с┤Ь╔??с┤Зsс┤Ыс??с┤Ес??, с┤бс?s╔┤'с┤?╔кс┤?..с░Фс?**",
           " **??с┤б╩Ьс??с┤?с┤бс??с┤??с┤Пс? ?с┤Ьs? ?с┤Зsс┤Ыс??с┤Ес??...с░Фс?**",
           " **???с┤Пс? ?с┤Зс?с┤А╔к╔┤ sс┤?с┤Дс??с┤???╔кс┤З╔┤с?...с░Фс?**",
           " **??с┤Ес? ?с┤Пс? с┤Л╔┤с?с┤??с┤Пс┤б с┤Ыс? s╔к╔┤╔в, s╔к╔┤╔в...с░Фс?**",
           " **??с┤б╔к╩Я╩??с┤Пс? с┤Дс?с┤Нс? ?с┤П╩А с┤А с┤бс??с┤?с┤б╔кс?? с┤Нс?...с░Фс?**",
           " **??с┤А?с┤бс??s ?с┤??с┤Ас┤Шс?? ??╔кс┤З╔┤с?...с░Фс?**",
           " **??с┤Дс?╔┤ с┤бс? ?с┤???╔кс┤З╔┤с?s...с░Фс?**",
           " **??с┤А?с┤??с┤Пс? с┤Нс???╔кс┤Зс?...с░Фс?**",
           " **??с┤б╩Ьс??с┤??с┤Ас┤ас? ?с┤Пс? ?с┤Зс?╔┤ ?с┤Ьs? ?с┤П╩А sс┤?с┤Нс?╔┤? с┤Ес??s...с░Фс?**",
           " **???╔к╔┤с┤?╔кs ╔к╔┤ ?╔кс┤? с┤Ыс? с┤Кс?╔к╔┤ ╔┤с┤Пс┤б...с░Фс?**",
           " **???с┤Ас┤??с┤Ь╔?..с░Фс?**",
           " **??с┤Ес? ?с┤Пс? с┤Л╔┤с?с┤?с┤Ы╩Ьс? с┤Пс┤б╔┤с┤З╩А с┤П╥?с┤Ы╩Ь╔кs ╔в?с┤Пс?с┤?..с░Фс?**",
           " **??с┤Ес? ?с┤Пс? с┤Зс?с┤З╩А ?с┤Зс?с┤Зс??с┤З╩А с┤Нс?...с░Фс?**",
           " **???с┤Зс?'s с┤Шс??с┤Ы╩?..с░Фс?**",
           " **???с┤Пс┤б с┤Дс?с┤Нс? с┤Ыс?с┤Ес??...с░Фс?**",
           " **???╔кsс┤Ыс?╔┤ с┤Нс?...с░Фс?**",
           " **???с┤Пс┤б с┤бс?s ?с┤Пс?? с┤Ес??...с░Фс?**",
           " **??с┤Е╔кс? ?с┤Пс? sс┤Зс?...с░Фс?**",
           " **??с┤А?с┤??с┤Пс? с┤Ы╩Ьс? с┤Ас┤Ес?╔к╔┤ ?с┤З╩Ас┤?..с░Фс?**",
           " **??с┤А?с┤??с┤Пс? ╔к╔┤ ?с┤З╩Яс?с┤Ы╔кс?╔┤s?╔кс┤?..с░Фс?**",
           " **??с┤А╔┤с┤??с┤Пс┤б ╔кs с┤Ы╩Ьс? с┤Ш╩А╔кsс┤П╔┤с??...с░Фс?**",
           " **??sс┤Ас┤??с┤Пс? ?с┤Зsс┤Ыс??с┤Ес??...с░Фс?**",
           " **??с┤б╩Ьс??с┤?с┤А?с┤??с┤Пс? ??с┤Пс?...с░Фс?**",
           " **??с┤А?с┤??с┤Пс? с┤П╔┤╩Я╔к╔┤с?...с░Фс?**",
           " **??с┤б╩Ьс?с┤?с┤Ес? ?с┤Пс? ?╔кс┤Лс? с┤Ыс? с┤Зс?с┤?..с░Фс?**",
           " **??с┤Ас┤Ес? с┤Нс? с┤Ыс? ?с┤Пс?? ╔в?с┤Пс?с┤? ╔к с┤б╔к╩Я╩?с┤Ш╩Яс?? с┤Нс?s╔кс┤?с┤А╔┤с┤?с┤Ыс?╔в с┤Зс?с┤З╩А?с┤П╔┤с?...с░Фс?**",
           " **??с┤б╔к╩Я╩??с┤Пс? с┤Ш╩Яс?? с┤Ы╩Ас┤Ьс?? с┤А╔┤с┤?с┤Ес??с┤?..с░Фс?**",
           " **??с┤б╩Ьс?с┤Ыs ?с┤Ас┤Шс?с┤З╔┤с?с┤?с┤Ыс? ?с┤Пс?...с░Фс?**",
           " **??с┤Ес? ?с┤Пс? с┤бс?╔┤╔┤с┤А с┤Зс?с┤?с┤Д╩Ьс?с┤Дс??с┤Ас┤Ыс?...с░Фс?**",
           " **???с┤З╩Я╩Яс? ?с┤А??...с░Фс?**",
           " **??с┤Ес? с┤Д╩Ьс?с┤Ыс?╔к╔┤╔в с┤б╔кс?? с┤Нс?...с░Фс?**",
           " **??с┤б╩Ьс?с┤?с┤Ес? ?с┤Пс? sс┤А?...с░Фс?**",
           " **??╔в╔кс┤ас? с┤Нс? ?с┤Пс?? с┤б╩Ьс?с┤Ыsс┤Ас┤Шс? ╔┤с┤Ьс??с┤З╩А с┤Ш╩Яс?с┤Аsс┤?..с░Фс?**"
           ]

VC_TAG = [" **??ржЖржорж╛р?рз?ржнр?рж▓р? ржпрж╛рж?..?Те**",
         " **??ржЖржорж?рждр?ржорж╛ржХр? ржнрж╛рж▓р?ржмрж╛рж╕рж┐ ржирж╛...?Те**",
         " **??ржПр?рж╛р?рз?рждр?ржорж╛рж?ржХрж░рз?ржкрж┐ржпрж╝рж? рждр?ржорж╛рж?ржХрж░рз?..?Те**",
         " **??ржЖржорж╛рж░ ржЧр?рж░р?ржкр?рж?ржпр?рж?ржжрж┐рж?..?Те**",
         " **??ржЖржорж?рж╣р?ржжржпрж╝р? рждр?ржорж╛рж?ржирж╛рж?рж░р?ржЦр?ржЫрж┐...?Те**",
         " **??рждр?ржорж╛рж?рж╕ржм ржмржирзНржзрз?ржХр?ржерж╛ржпрж╝...?Те**",
         " **??ржХрж╛рж?рж╕р?ржор?рждрж┐рждр? рждр?ржорж┐ рж╣рж╛рж░рж┐ржпрж╝рз?ржЧр?ржЫр? ржЖржорж╛рж░ ржнрж╛рж▓р?ржмрж╛рж╕рж╛...?Те**",
         " **??рждр?ржорж╛рж?ржкр?рж╢рж╛ ржХрж┐...?Те**",
         " **??рждр?ржорж┐ ржХр?ржерж╛ржпрж╝ ржерж╛ржХр?...?Те**",
         " **??рж╢р?рж?рж╕р?рж╛рж▓, ржмрж╛ржмр?...?Те**",
         " **??рж╢р?рж?рж░рж╛рждр?рж░рж┐, ржЕржирзЗр? ржжр?рж░рж┐ рж╣ржпрж╝р? ржЧр?ржЫр?...?Те**",
         " **??ржЖржорж╛рж░ ржЖр? ржЦр?рж?ржЦрж╛рж░рж╛рж?рж▓рж╛ржЧр?рз?..?Те**",
         " **??ржЖржорж╛рж░ рж╕рж╛ржер?рж?ржХржерж?ржмрж▓...?Те**",
         " **??ржЖр? рж░рж╛рждр?рж?ржЦрж╛ржмрж╛рж░р?рж?ржЬржирзНржп ржХрж┐...?Те**",
         " **??ржХрж┐ рж╣р?рзНр?рз?..?Те**",
         " **??рждр?ржорж┐ ржор?рж╕р?рж?ржжрж╛рж?ржирж╛ ржХр?рж?..?Те**",
         " **??ржЖржорж?ржирж┐рж░р?ржжр?рж?..?Те**",
         " **??ржПр?рж?ржЧрждржХрж╛рж?ржор?рж?ржЫрж┐рж? рждрж╛рж?ржирж╛...?Те**",
         " **??рждр?ржорж┐ ржЧрждржХрж╛рж?ржХр?ржерж╛ржпрж╝ ржмр?ржпрж╕рзНржд ржЫрж┐рж▓р?...?Те**",
         " **??рждр?ржорж┐ ржХрж┐ рж╕ржорзНржкрж░р?ржХр? ржЖр?рз?..?Те**",
         " **??рждр?ржорж┐ ржЦр?рж?рж╢рж╛ржир?рж?ржерж╛ржХр? ржмржирзНржзрз?..?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржЧрж╛ржЗрждрз?ржЬрж╛ржир?, ржЧрж╛ржЗрждрз?..?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржЖржорж╛рж░ рж╕рж╛ржер? ржмр?ржбрж╝рж╛рждрз?ржЖрж╕ржмр?...?Те**",
         " **??рж╕ржмрж╕ржоржпрж╝ рж╣рж╛рж╕рж┐ржЦр?рж╢рж┐ ржер?ржХр? ржмржирзНржзрз?..?Те**",
         " **??ржЖржорж░рж╛ ржХрж┐ ржмржирзНржзрз?рж╣рждрз?ржкрж╛рж░рж┐...?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржмрж┐ржмрж╛рж╣рж┐рж?..?Те**",
         " **??ржПржд ржжрж┐рж?ржХр?ржерж╛ржпрж╝ ржмр?ржпрж╕рзНржд ржЫрж┐рж▓р?...?Те**",
         " **??рж▓рж┐ржЩр?рж?ржмрж╛ржпрж╝рзЛрждрз?ржЖр?рз? ржПр?рж?ржпр?рж?ржжрж┐рждр?...?Те**",
         " **??ржор?рж?ржХрж░рж▓рж╛рж?..?Те**",
         " **??ржЖржкржирж┐ ржХрж┐ ржПр? ржЧр?рж░р?ржкр?рж?ржорж╛рж▓рж┐ржХр?рз?ржЪр?ржир?рж?..?Те**",
         " **??рждр?ржорж╛рж?ржХрж┐ ржХр?ржир? ржоржирз?ржкржбрж╝р? ржЖржорж╛ржпрж?..?Те**",
         " **??ржЪрж▓рз?ржкрж╛рж░р?ржЯрж┐ ржХрж░рж?..?Те**",
         " **??ржЖр? ржХр?ржоржи ржПрж▓рз?..?Те**",
         " **??ржХр?ржоржи ржХрж╛ржЯрж▓рз?рждр?ржорж╛рж?ржжрж┐рж?..?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржжр?ржЦр?ржЫр?...?Те**",
         " **??ржЖржкржирж┐ ржХрж┐ ржПр?рж╛ржиржХрж╛рж?ржкр?рж░рж╢рж╛рж╕рж?..?Те**",
         " **??ржЖржорж░рж╛ ржмржирзНржзрз?рж╣рждрз?ржкрж╛рж░рж┐...?Те**",
         " **??рждр?ржорж┐ ржХрж┐ рж╕ржорзНржкрж░р?ржХр? ржЖр?рз?..?Те**",
         " **??ржЖрж░ ржмржирзНржжрзА ржХр?ржоржи ржЖр?рз?..?Те**",
         " **??рждр?ржорж╛ржХр? ржЧрждржХрж╛рж?ржжр?ржЦр?ржЫрж┐...?Те**",
         " **??рждр?ржорж┐ ржХр?ржерж╛ ржер?ржХр?...?Те**",
         " **??ржЖржкржирж┐ ржХрж┐ ржЕржирж▓рж╛ржЗржирз?ржЖр?рзЗржи...?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржЖржорж╛рж░ ржмржирзНржзрз?...?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржЦр?рждр? ржкр?ржир?рж?ржХрж░...?Те**",
         " **??ржЖржорж╛р?рз?ржЖржкржирж╛рж?ржЧр?рж░р?ржкр? ржЕр?ржпрж╛рж?ржХрж░рзБржи, ржЖржорж?ржЧрж╛рж?ржмрж╛ржЬрж┐ржпрж╝рз?рж╕ржмрж╛р?ржХр? ржЯр?ржпрж╛рж?ржХрж░рж?...?Те**",
         " **??ржЖр? ржЖржорж?ржжр?ржГр?рж┐ржд...?Те**",
         " **??рждр?ржорж┐ ржХрж┐ рж╕рждрзНржп ржЦр?рж▓ржмрз?ржПржмрж?рж╕рж╛рж╣рж╕ ржХрж░ржмр?...?Те**",
         " **??рждр?ржорж╛рж?ржоржд ржмржирзНржзрз?ржерж╛ржХрж▓рз?ржЪрж┐ржир?рждрж╛рж?ржХрж┐ ржЖр?рз?..?Те**",
         " **??ржХрж┐ рж╣ржпрж╝р?ржЫр? рждр?ржорж╛рж?..?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржЪр?рж▓р?рж?ржЦр?рждр? ржЪрж╛рж?...?Те**",
         " **??рж╣р?ржпрж╛рж▓р? ржмрж╛ржмр?...?Те**",
         " **??ржЖржорж╛рж░ рж╕рж╛ржер? ржЪр?ржпрж╛рж?ржХрж░рз?..?Те**",
         " **??рждр?ржорж┐ ржХрж┐ ржмрж▓рз?..?Те**"
        ]


@app.on_message(filters.command(["entag", "englishtag" ], prefixes=["/", "@", "#"]))
async def mentionall(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("р╣?с┤Ы╩Ь╔кs с┤Дс?с┤Нс?с┤А╔┤с┤?с┤П╔┤╩Я╩??с┤П╩А ╔в?с┤Пс?с┤Шs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("р╣??с┤Пс? с┤А?с┤?╔┤с┤Пс? с┤Ас┤Ес?╔к╔┤ ?с┤А??, с┤П╔┤╩Я╩?с┤Ас┤Ес?╔к╔┤s с┤Дс?╔┤ с┤Ыс?╔в с┤Нс?с┤Н╩Щс??s. ")

    if message.reply_to_message and message.text:
        return await message.reply("/entag ╔вс┤Пс?с┤?с┤Нс??╔┤╔к╔┤╔в с┤Ы╩Пс?с┤??╔кс┤Лс? с┤Ы╩Ь╔кs / ?с┤Зс??? с┤А╔┤? с┤Нс?ssс┤А╔вс┤?╔┤с┤Зxс┤?с┤Ы╔кс?с┤??с┤Пс? с┤Ыс?╔в╔в╔к╔┤╔в...")
    elif message.text:
        mode = "text_on_cmd"
        msg = message.text
    elif message.reply_to_message:
        mode = "text_on_reply"
        msg = message.reply_to_message
        if not msg:
            return await message.reply("/entag ╔вс┤Пс?с┤?с┤Нс??╔┤╔к╔┤╔в с┤Ы╩Пс?с┤??╔кс┤Лс? с┤Ы╩Ь╔кs / ?с┤Зс??? с┤А╔┤? с┤Нс?ssс┤А╔вс┤?╔┤с┤Зxс┤?с┤Ы╔кс?с┤??с┤Пс? с┤Ыс?╔в╔в╔к╔┤╔в...")
    else:
        return await message.reply("/entag ╔вс┤Пс?с┤?с┤Нс??╔┤╔к╔┤╔в с┤Ы╩Пс?с┤??╔кс┤Лс? с┤Ы╩Ь╔кs / ?с┤Зс??? с┤А╔┤? с┤Нс?ssс┤А╔вс┤?╔┤с┤Зxс┤?с┤Ы╔кс?с┤??с┤Пс? с┤Ыс?╔в╔в╔к╔┤╔в...")
    if chat_id in spam_chats:
        return await message.reply("р╣?с┤Ш╩Яс?с┤Аsс┤?с┤Ас┤??╔к?sс┤?sс┤Ыс?с┤??с┤Ь╔┤╔┤╔к╔┤╔?с┤Нс?╔┤с┤Ы╔кс?╔┤ с┤Ш╩Ас┤Пс?с┤Зss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += "<a href='tg://user?id={}'>{}</a>".format(usr.user.id, usr.user.first_name)

        if usrnum == 1:
            if mode == "text_on_cmd":
                txt = f"{usrtxt} {random.choice(TAGMES)}"
                await client.send_message(chat_id, txt)
            elif mode == "text_on_reply":
                await msg.reply(f"[{random.choice(EMOJI)}](tg://user?id={usr.user.id})")
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass


@app.on_message(filters.command(["bntag"], prefixes=["/", "@", "#"]))
async def mention_allvc(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("р╣?с┤Ы╩Ь╔кs с┤Дс?с┤Нс?с┤А╔┤с┤?с┤П╔┤╩Я╩??с┤П╩А ╔в?с┤Пс?с┤Шs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("р╣??с┤Пс? с┤А?с┤?╔┤с┤Пс? с┤Ас┤Ес?╔к╔┤ ?с┤А??, с┤П╔┤╩Я╩?с┤Ас┤Ес?╔к╔┤s с┤Дс?╔┤ с┤Ыс?╔в с┤Нс?с┤Н╩Щс??s. ")
    if chat_id in spam_chats:
        return await message.reply("р╣?с┤Ш╩Яс?с┤Аsс┤?с┤Ас┤??╔к?sс┤?sс┤Ыс?с┤??с┤Ь╔┤╔┤╔к╔┤╔?с┤Нс?╔┤с┤Ы╔кс?╔┤ с┤Ш╩Ас┤Пс?с┤Зss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += "<a href='tg://user?id={}'>{}</a>".format(usr.user.id, usr.user.first_name)

        if usrnum == 1:
            txt = f"{usrtxt} {random.choice(VC_TAG)}"
            await client.send_message(chat_id, txt)
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass



@app.on_message(filters.command(["cancel", "enstop", "bnstop"]))
async def cancel_spam(client, message):
    if not message.chat.id in spam_chats:
        return await message.reply("р╣?с┤Дс???с┤З╔┤с??? ╔к'с┤?╔┤с┤Пс? с┤Ыс?╔в╔в╔к╔┤╔в ?с┤А??.")
    is_admin = False
    try:
        participant = await client.get_chat_member(message.chat.id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("р╣??с┤Пс? с┤А?с┤?╔┤с┤Пс? с┤Ас┤Ес?╔к╔┤ ?с┤А??, с┤П╔┤╩Я╩?с┤Ас┤Ес?╔к╔┤s с┤Дс?╔┤ с┤Ыс?╔в с┤Нс?с┤Н╩Щс??s.")
    else:
        try:
            spam_chats.remove(message.chat.id)
        except:
            pass
        return await message.reply("р╣?с┤Нс?╔┤с┤Ы╔кс?╔┤ с┤Ш╩Ас┤Пс?с┤Зss sс┤Ыс?с┤Шс?с┤Зс? р╣?)
          
